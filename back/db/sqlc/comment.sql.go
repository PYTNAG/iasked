// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.22.0
// source: comment.sql

package db

import (
	"context"
	"database/sql"
)

const createComment = `-- name: CreateComment :one
INSERT INTO comments ( author_id, rfc_id )
VALUES (
    $1,
    $2
)
RETURNING id
`

type CreateCommentParams struct {
	AuthorID sql.NullInt32 `json:"author_id"`
	RfcID    sql.NullInt32 `json:"rfc_id"`
}

func (q *Queries) CreateComment(ctx context.Context, arg CreateCommentParams) (int32, error) {
	row := q.db.QueryRowContext(ctx, createComment, arg.AuthorID, arg.RfcID)
	var id int32
	err := row.Scan(&id)
	return id, err
}

const deleteComment = `-- name: DeleteComment :exec
DELETE FROM comments
WHERE id = $1
`

func (q *Queries) DeleteComment(ctx context.Context, commentID int32) error {
	_, err := q.db.ExecContext(ctx, deleteComment, commentID)
	return err
}

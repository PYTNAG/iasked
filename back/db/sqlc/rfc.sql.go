// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.22.0
// source: rfc.sql

package db

import (
	"context"
	"database/sql"
)

const createRFC = `-- name: CreateRFC :one
INSERT INTO rfcs ( author_id, message )
VALUES (
    $1,
    $2
)
RETURNING id
`

type CreateRFCParams struct {
	AuthorID sql.NullInt32 `json:"author_id"`
	Message  string        `json:"message"`
}

func (q *Queries) CreateRFC(ctx context.Context, arg CreateRFCParams) (int32, error) {
	row := q.db.QueryRowContext(ctx, createRFC, arg.AuthorID, arg.Message)
	var id int32
	err := row.Scan(&id)
	return id, err
}

const deleteRFC = `-- name: DeleteRFC :exec
DELETE FROM rfcs
WHERE id = $1
`

func (q *Queries) DeleteRFC(ctx context.Context, rfcID int32) error {
	_, err := q.db.ExecContext(ctx, deleteRFC, rfcID)
	return err
}
